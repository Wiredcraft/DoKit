apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply from: '../upload.gradle'
apply plugin: 'maven-publish'

def dokitVersion = rootProject.ext.publish_config["version"]

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]

    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion_21"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]

        lintOptions {
            abortOnError false
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++11"
                arguments '-DANDROID_STL=c++_static'
            }
        }
        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath true
                arguments += [
                    "room.schemaLocation"  : "$projectDir/schemas".toString(),
                    "room.incremental"     : "true",
                    "room.expandProjection": "true"]
            }
        }
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a'
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField("String", "DOKIT_VERSION", "\"" + dokitVersion + "\"")
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField("String", "DOKIT_VERSION", "\"" + dokitVersion + "\"")
        }
    }
//    externalNativeBuild {
//        cmake {
//            path "src/main/cpp/CMakeLists.txt"
//        }
//    }

//    compileOptions {
//        sourceCompatibility JavaVersion.VERSION_1_8
//        targetCompatibility JavaVersion.VERSION_1_8
//    }

    kotlinOptions {
        jvmTarget = "1.8"
    }


    /**
     * 支持ViewBinding
     */
    buildFeatures {
//        viewBinding = true
        dataBinding = true
    }
    packagingOptions {
        pickFirst 'lib/armeabi-v7a/libc++_shared.so'
        pickFirst 'lib/arm64-v8a/libc++_shared.so'
        pickFirst 'lib/armeabi-v7a/libwechatbacktrace.so'
        pickFirst 'lib/arm64-v8a/libwechatbacktrace.so'
    }

    // Encapsulates your external native build configurations.
//    externalNativeBuild {
//
//        // Encapsulates your CMake build configurations.
//        cmake {
//
//            // Provides a relative path to your CMake build script.
//            path "CMakeLists.txt"
//        }
//    }
//    sourceSets {
//        main {
//            jniLibs {
//                setSrcDirs (['./libs'] as Set)
//            }
//        }
//
//    }
//    ndkVersion '21.4.7075529'

}

dependencies {
//    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //noinspection GradleCompatible
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'junit:junit:4.12'
    if (needKotlinV14()) {
        implementation rootProject.ext.dependencies["kotlin_v14"]
    } else {
        implementation rootProject.ext.dependencies["kotlin_v13"]
    }
    implementation rootProject.ext.dependencies["lifecycle-comm"]

    implementation rootProject.ext.dependencies["constraintLayout"]
    implementation rootProject.ext.dependencies["appcompat"]
    implementation rootProject.ext.dependencies["cardview"]
    implementation rootProject.ext.dependencies["recyclerview"]
    implementation rootProject.ext.dependencies["core-ktx"]
    implementation rootProject.ext.dependencies["activity-ktx"]
    implementation rootProject.ext.dependencies["webkit"]
    implementation rootProject.ext.dependencies["volley"]
    api rootProject.ext.dependencies["gson"]
    implementation rootProject.ext.dependencies["zxing"]

    //远程调试db
    //implementation rootProject.ext.dependencies["debug-db"]
    //implementation rootProject.ext.dependencies["debug-db-encrypt"]
    implementation rootProject.ext.dependencies["android_spinkit"]
    implementation rootProject.ext.dependencies["okhttp_v2"]
    implementation rootProject.ext.dependencies["okhttp_v3"]
    implementation rootProject.ext.dependencies["room_runtime"]
    annotationProcessor rootProject.ext.dependencies["room_compile"]

    implementation rootProject.ext.dependencies["jsoup"]
    //okhttp wrap
    implementation project(':dokit-okhttp-api')
    implementation project(':dokit-util')
    implementation rootProject.ext.dependencies["localbroadcastmanager"]
    //js_bridge
    implementation rootProject.ext.dependencies["js_bridge"]

    //  matrix


//    api "com.tencent.matrix:matrix-memory-canary:2.0.8"
//    implementation group: "com.tencent.matrix", name: "matrix-android-lib", version: '2.0.8', changing: true
//    implementation group: "com.tencent.matrix", name: "matrix-android-commons", version: '2.0.8', changing: true
//    implementation group: "com.tencent.matrix", name: "matrix-hooks", version: '2.0.8', changing: true
//    implementation group: "com.tencent.matrix", name: "matrix-backtrace", version: '2.0.8', changing: true
    //api 'com.tencent:mmkv:1.2.13'

    api group: "com.tencent.matrix", name: "matrix-memory-canary", version: MATRIX_VERSION, changing: true
    api group: "com.tencent.matrix", name: "matrix-android-lib", version: MATRIX_VERSION, changing: true
    api group: "com.tencent.matrix", name: "matrix-android-commons", version: MATRIX_VERSION, changing: true
    api group: "com.tencent.matrix", name: "matrix-trace-canary", version: MATRIX_VERSION, changing: true
    api group: "com.tencent.matrix", name: "matrix-resource-canary-android", version: MATRIX_VERSION, changing: true
    api group: "com.tencent.matrix", name: "matrix-resource-canary-common", version: MATRIX_VERSION, changing: true
   // implementation group: "com.tencent.matrix", name: "matrix-io-canary", version: MATRIX_VERSION, changing: true
   // implementation group: "com.tencent.matrix", name: "matrix-sqlite-lint-android-sdk", version: MATRIX_VERSION, changing: true
    //implementation group: "com.tencent.matrix", name: "matrix-battery-canary", version: MATRIX_VERSION, changing: true
    api group: "com.tencent.matrix", name: "matrix-hooks", version: MATRIX_VERSION, changing: true
    api group: "com.tencent.matrix", name: "matrix-backtrace", version: MATRIX_VERSION, changing: true
//    //api 'com.tencent:mmkv:1.2.13'

//    implementation rootProject.ext.dependencies["mimecraft"]
    //会合滴滴内部的spi-plugin冲突
//    implementation rootProject.ext.dependencies["ktor-serialization"]
//    implementation rootProject.ext.dependencies["ktor-gson"]

    kapt rootProject.ext.dependencies["room_compile"]
    //auto-service
    implementation rootProject.ext.dependencies["auto_service"]
    kapt rootProject.ext.dependencies["auto_service"]


    //三大图片框架
    if (needKotlinV14()) {
        compileOnly rootProject.ext.dependencies["coil_v13"]
    } else {
        compileOnly rootProject.ext.dependencies["coil_v11"]
    }
    compileOnly rootProject.ext.dependencies["glide"]
    compileOnly rootProject.ext.dependencies["picasso"]
    compileOnly rootProject.ext.dependencies["fresco"]
    compileOnly rootProject.ext.dependencies["image-loader"]
    //腾讯x5
    compileOnly rootProject.ext.dependencies["tbs"]

    //高德地图
//    implementation rootProject.ext.dependencies["amap_map3d"]
    //高德地图定位
    compileOnly rootProject.ext.dependencies["amap_location"]
    //高德导航
    compileOnly rootProject.ext.dependencies["amap_navi"]
    //腾讯地图定位
    compileOnly rootProject.ext.dependencies["tencent_location"]
//    compileOnly rootProject.ext.dependencies["tencent_map"]
    //百度地图定位
//    compileOnly files('libs/BaiduLBS_Android.jar')

}

publishing {
    publications {
        debug(MavenPublication) {
            groupId = 'io.github.didi.dokit'
            artifactId = 'dokitx'
            version = '3.7.26-SNAPSHOT'
            afterEvaluate {
                from components.debug
            }
        }
    }
    repositories {
        maven {
            name = 'myrepo'
            url = "${project.buildDir}/repo2"
        }
        maven {
            url = 'https://packages.aliyun.com/maven/repository/2359186-snapshot-2KppUX/'
            credentials {
                username = '642677cf7dcfe0feff174479'
                password = 'c=w01)b)vvN1'
            }
        }
    }
}

//configurations.all {
    //循环每个依赖库
//    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        //获取当前循环到的依赖库
//        def requested = details.requested
//        //如果这个依赖库群组的名字是com.android.support
//        if (requested.group == 'com.squareup.okhttp3') {
//            //且其名字不是以multidex开头的
//            if (requested.name == "okhttp") {
//                //这里指定需要统一的依赖版本 比如我的需要配置成27.1.1
//                //details.useVersion rootProject.ext.android["okhttp_v4"]
//            }
//        }
//        else if (requested.group == 'androidx.core') {
//            if (requested.name == "core") {
//                //这里指定需要统一的依赖版本 比如我的需要配置成27.1.1
//                details.useVersion '1.2.0'
//            }
//        } else if (requested.group == 'androidx.versionedparcelable') {
//            if (requested.name == "versionedparcelable") {
//                //这里指定需要统一的依赖版本 比如我的需要配置成27.1.1
//                details.useVersion '1.1.0'
//            }
//        }
//    }
//}







